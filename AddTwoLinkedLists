# You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.
# You may assume the two numbers do not contain any leading zero, except the number 0 itself.
#Input: l1 = [2,4,3], l2 = [5,6,4]
#Output: [7,0,8]
#Explanation: 342 + 465 = 807.
# https://www.techiedelight.com/add-two-linked-lists-without-using-extra-space/



# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        
        head = None
        # stores the last seen node
        prev = None
        # initialize carry with 0
        carry = 0 
        # run till both lists are empty
        while l1 or l2:
            total = 0 
            # sum is X's data + Y's data + carry (if any)
            if l1:
                total += l1.val
            if l2:
                total += l2.val
            
            total += carry
            
            # if the sum of a 2â€“digit number, reduce it and update carry
            carry = total // 10
            total = total % 10

            # create a new node with the calculated sum
            totalNode = ListNode(total)

            # if the output list is empty
            if head is None:
                # update `prev` and `head` to point to the new node
                head = totalNode
                prev = totalNode
            else:
                 # add the new node to the output list
                prev.next = totalNode
                # update the previous node to point to the new node
                prev = totalNode
            
            # advance `X` and `Y` for the next iteration of the loop
            l1 = l1.next if l1 else l1
            l2 = l2.next if l2 else l2
        
        if carry:
            prev.next = ListNode(carry,prev.next)
        
        return head



                
